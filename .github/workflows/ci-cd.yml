name: ci-cd

on:
  push:
    branches: [develop, stage, master, feature/*]

jobs:
  install-dev-dependencies:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Restore or save cache for dev Dependencies
        uses: actions/cache@v2
        env:
          cache-name: npm-node-modules-dev
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-dev
      - name: Install Dependencies
        run: |
          if [ -d "node_modules" ]; then
            echo 'Dependencies already exists!'
          else
            npm ci
          fi
  build:
    runs-on: ubuntu-20.04
    needs: install-dev-dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Restore or save cache for dev Dependencies
        uses: actions/cache@v2
        env:
          cache-name: npm-node-modules-dev
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-dev
      - name: Install Dependencies
        run: |
          npm run build
      - name: Persist Data
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
  install-prod-dependencies:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Restore or save cache for prod Dependencies
        uses: actions/cache@v2
        env:
          cache-name: npm-node-modules-prod
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-prod
      - run: ls
      - name: Install Dependencies
        run: |
          if [ -d "node_modules" ]; then
            echo 'Dependencies already exists!'
          else
            npm ci --only=prod
          fi
  test:
    runs-on: ubuntu-20.04
    needs: install-dev-dependencies
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - name: Restore or save cache for dev Dependencies
        uses: actions/cache@v2
        env:
          cache-name: npm-node-modules-dev
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-dev
      - name: Running Linter
        run: npm run lint
      - name: Running Test
        run: |
          npm run coverage && npm run coverage:report
      - name: Persist Data
        uses: actions/upload-artifact@v2
        with:
          name: coverage
          path: coverage

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-20.04
    needs: [build, test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - uses: actions/download-artifact@v2
        with:
          name: coverage
          path: coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  deploy-develop:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/develop' || contains(github.ref, 'feature')
    needs: [install-prod-dependencies, build]
    steps:
      - uses: actions/checkout@v2
      - name: Restore Data
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Restore or save cache for prod Dependencies
        uses: actions/cache@v2
        env:
          cache-name: npm-node-modules-prod
        with:
          path: node_modules
          key: npm-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}-prod
      - run: ls
      - name: Prepare files
        shell: bash
        id: Prepare-files
        run: |
          cp lambda/index.js index.js
        uses: actions/checkout@v2
      - name: Deploy Lambda Function
        run: npm run deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}